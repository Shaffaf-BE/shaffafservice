package com.shaffaf.shaffafservice.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UnitTypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUnitTypeAllPropertiesEquals(UnitType expected, UnitType actual) {
        assertUnitTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertUnitTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUnitTypeAllUpdatablePropertiesEquals(UnitType expected, UnitType actual) {
        assertUnitTypeUpdatableFieldsEquals(expected, actual);
        assertUnitTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUnitTypeAutoGeneratedPropertiesEquals(UnitType expected, UnitType actual) {
        assertThat(actual)
            .as("Verify UnitType auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUnitTypeUpdatableFieldsEquals(UnitType expected, UnitType actual) {
        assertThat(actual)
            .as("Verify UnitType relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getCreatedBy()).as("check createdBy").isEqualTo(expected.getCreatedBy()))
            .satisfies(a -> assertThat(a.getCreatedDate()).as("check createdDate").isEqualTo(expected.getCreatedDate()))
            .satisfies(a -> assertThat(a.getLastModifiedBy()).as("check lastModifiedBy").isEqualTo(expected.getLastModifiedBy()))
            .satisfies(a -> assertThat(a.getLastModifiedDate()).as("check lastModifiedDate").isEqualTo(expected.getLastModifiedDate()))
            .satisfies(a -> assertThat(a.getDeletedOn()).as("check deletedOn").isEqualTo(expected.getDeletedOn()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUnitTypeUpdatableRelationshipsEquals(UnitType expected, UnitType actual) {
        // empty method
    }
}
